version: "3.8"
services:
  api:
    image: johnliutw/blog-api:${IMAGE_TAG}
    command: sh -c "php-fpm"
    deploy:
      replicas: 3
    volumes:
      - ./.env:/usr/src/.env
      - type: volume
        source: storage
        target: /usr/src/storage
    depends_on:
      - update

  update:
    image: johnliutw/blog-api:${IMAGE_TAG}
    command: sh update.sh
    volumes:
      - ./.env:/usr/src/.env

  nginx:
    image: johnliutw/blog-nginx:${IMAGE_TAG}
    ports:
      - "80:80"
    volumes:
      - ./.env:/usr/src/.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost/posts" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 2m
    depends_on:
      - api


  scheduler:
    image: johnliutw/blog-scheduler:${IMAGE_TAG}
    command: sh -c "php /usr/src/artisan schedule:run --verbose --no-interaction"
    deploy:
      replicas: 1
    volumes:
      - ./.env:/usr/src/.env
      - type: volume
        source: storage
        target: /usr/src/storage
    depends_on:
      - update

  worker:
    image: johnliutw/blog-worker:${IMAGE_TAG}
    command: sh -c "php /usr/src/artisan queue:work --queue=default,high --tries=3 --verbose --timeout=30 --sleep=3 --max-jobs=1000 --max-time=3600"
    deploy:
      replicas: 1
    healthcheck:
      test: [ "CMD", "php", "/usr/src/artisan", "queue:monitor", "default" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    volumes:
      - ./.env:/usr/src/.env
      - type: volume
        source: storage
        target: /usr/src/storage
    depends_on:
      - update

  redis:
    image: redis:7.0.11-alpine
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 15s
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    volumes:
      - type: volume
        source: redisdata
        target: /data

volumes:
  storage:
  redisdata:
